{"version":3,"sources":["components/card/card.component.jsx","components/card-list/card-list.component.jsx","components/search-box/search-box.component.jsx","App.js","reportWebVitals.js","index.js"],"names":["Card","props","className","alt","src","id","monster","name","email","CardList","monsters","map","SearchBox","placeholder","handleChange","type","onChange","App","e","setState","searchField","target","value","console","log","state","fetch","then","response","json","users","this","filteredMonsters","filter","toLowerCase","includes","toLocaleLowerCase","font","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"+TAGaA,EAAO,SAAAC,GAEhB,OAAO,sBAAKC,UAAU,iBAAf,UACH,qBAAKC,IAAI,UAAUC,IAAG,+BAA0BH,EAAMI,GAAhC,4BACtB,6BAAMJ,EAAMK,QAAQC,OACpB,4BAAIN,EAAMK,QAAQE,YCJbC,G,MAAW,SAAAR,GAEpB,OAAO,qBAAKC,UAAU,YAAf,SACFD,EAAMS,SAASC,KAAI,SAAAL,GAAO,OACvB,cAAC,EAAD,CAAMA,QAASA,EAA0BD,GAAIC,EAAQD,IAAxBC,EAAQD,WCJpCO,G,MAAY,SAAC,GAAmC,IAAjCC,EAAgC,EAAhCA,YAAaC,EAAmB,EAAnBA,aACrC,OAAO,uBACHZ,UAAU,SACVa,KAAK,SACLF,YAAaA,EACbG,SAAUF,MCqCHG,G,wDAvCb,aAAe,IAAD,8BACZ,gBAiCFH,aAAe,SAACI,GACd,EAAKC,SAAS,CAAEC,YAAaF,EAAEG,OAAOC,QAAS,kBAAMC,QAAQC,IAAI,EAAKC,WAhCtE,EAAKA,MAAQ,CACXf,SAAU,GACVU,YAAa,IALH,E,qDASd,WAAqB,IAAD,OAClBM,MAAM,8CACHC,MAAK,SAAAC,GAAQ,OAAIA,EAASC,UAC1BF,MAAK,SAAAG,GAAK,OAAI,EAAKX,SAAS,CAAET,SAAUoB,S,oBAG7C,WAAS,MAE2BC,KAAKN,MAA/Bf,EAFD,EAECA,SAAUU,EAFX,EAEWA,YAIZY,EAAmBtB,EAASuB,QAAO,SAAA3B,GAAO,OAAIA,EAAQC,KAAK2B,cAAcC,SAASf,EAAYgB,wBAEpG,OACE,sBAAKlC,UAAU,MAAf,UACE,oBAAImC,MAAI,EAAR,gCACA,cAAC,EAAD,CAAWxB,YAAY,kBACrBC,aAAciB,KAAKjB,eACrB,cAAC,EAAD,CAAUJ,SAAUsB,W,GA7BVM,cCMHC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBd,MAAK,YAAkD,IAA/Ce,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.2446521f.chunk.js","sourcesContent":["import React from 'react';\r\nimport './card.styles.css';\r\n\r\nexport const Card = props => {\r\n    \r\n    return <div className='card-container'>\r\n        <img alt=\"monster\" src={`https://robohash.org/${props.id}?set=set2&size=180x180`}/>\r\n        <h2 >{props.monster.name}</h2>\r\n        <p>{props.monster.email}</p>\r\n        \r\n    </div>\r\n}","import React from 'react';\r\nimport { Card } from '../card/card.component';\r\nimport './card-list.styles.css';\r\n\r\nexport const CardList = props => {\r\n\r\n    return <div className=\"card-list\">\r\n        {props.monsters.map(monster => (\r\n            <Card monster={monster} key={monster.id} id={monster.id} />\r\n        ))}\r\n        \r\n    </div>\r\n}","import React from 'react';\r\n\r\nimport './search-box.styles.css';\r\n\r\nexport const SearchBox = ({ placeholder, handleChange }) => {\r\n    return <input\r\n        className='search'\r\n        type='search'\r\n        placeholder={placeholder}\r\n        onChange={handleChange} />\r\n\r\n}","import React, { Component } from 'react';\nimport { CardList } from './components/card-list/card-list.component';\nimport { SearchBox } from './components/search-box/search-box.component';\nimport './App.css';\n\n\nclass App extends Component {\n  constructor() {\n    super();\n\n    this.state = {\n      monsters: [],\n      searchField: ''\n    };\n  }\n\n  componentDidMount() {\n    fetch('https://jsonplaceholder.typicode.com/users')\n      .then(response => response.json())\n      .then(users => this.setState({ monsters: users }))\n  }\n\n  render() {\n    //search functionality\n    const { monsters, searchField } = this.state;\n    //equivalent to \n    // const monsters = this.state.monsters;\n    // const searchField = this.state.searchField;\n    const filteredMonsters = monsters.filter(monster => monster.name.toLowerCase().includes(searchField.toLocaleLowerCase()));\n\n    return (\n      <div className=\"App\">\n        <h1 font> Monsters Rolodex </h1>\n        <SearchBox placeholder='search monsters'\n          handleChange={this.handleChange} />\n        <CardList monsters={filteredMonsters} />\n      </div>\n    );\n\n  }\n\n  handleChange = (e) => {\n    this.setState({ searchField: e.target.value }, () => console.log(this.state))\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}